spring.kafka.properties.bootstrap.servers=localhost:9092
spring.kafka.max.block.ms=10

#########KAFKA##########
#spring.kafka.consumer.group-id=consumer_group3
#spring.kafka.consumer.client-id=consumer_group3

# define o offset para a primeira mensagem que o grupo ainda nao leu
spring.kafka.consumer.auto-offset-reset=earliest

#Kafka mode Batch
spring.kafka.consumer.max-poll-records=6
#spring.kafka.listener.type=batch



spring.kafka.batch-listener=true
spring.kafka.listener.ack-mode=MANUAL
spring.kafka.consumer.enable-auto-commit=false

#kafka timeout to 60 seconds / default 10 seconds
spring.kafka.consumer.session-timeout=60000

#kafka heartbeat interval to 2 seconds / default 2 seconds
spring.kafka.consumer.heartbeat-interval=2000

#kafka request timeout to 3 minutes / default 30 seconds
spring.kafka.consumer.request-timeout=180000

#Timout to process msgs in 6 minutes
spring.kafka.listener.poll-timeout=360000
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer


########CIRCUITE BREAKER########
# create configuration to ciruit breaker
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true

#resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=50 # de 100 chamadas, 50 tem que falhar para abrir o circuito

# quantidade de chamadas que o circuito vai monitorar
resilience4j.circuitbreaker.configs.default.slidingWindowSize=2

# de 100 chamadas, 50 tem que falhar para abrir o circuito
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50

# tempo que o circuito vai ficar aberto
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=10s

resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true

# add recordExceptions to circuit breaker
#resilience4j.circuitbreaker.configs.default.recordExceptions[0]=com.example.sendmessage.exception.TechnicalException

#########METRICS##########
# Add configures to micrometer and prometheus and grafana and actuator and all metrics
management.endpoint.health.show-details=always
management.endpoint.health.enabled=true
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true